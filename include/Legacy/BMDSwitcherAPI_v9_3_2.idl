/* -LICENSE-START-
** Copyright (c) 2024 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
**
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
**
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

// Forward Declarations

interface IBMDSwitcherMultiView_v9_3_2;
interface IBMDSwitcherMultiViewIterator_v9_3_2;
interface IBMDSwitcherRemoteSourceConfiguration_v9_3_2;


/* Interface IBMDSwitcherMultiView - MultiView Object */

[
    object,
    uuid(29D7C6C8-5133-4EBC-9119-5908098BD7B7),
    helpstring("MultiView Object")
] interface IBMDSwitcherMultiView_v9_3_2 : IUnknown
{
    HRESULT CanChangeLayout ([out] BOOL* canChangeLayout);
    HRESULT GetLayout ([out] BMDSwitcherMultiViewLayout* layout);
    HRESULT SetLayout ([in] BMDSwitcherMultiViewLayout layout);
    HRESULT SupportsQuadrantLayout ([out] BOOL* supportsQuadrantLayout);
    HRESULT GetWindowInput ([in] unsigned int window, [out] BMDSwitcherInputId* input);
    HRESULT SetWindowInput ([in] unsigned int window, [in] BMDSwitcherInputId input);
    HRESULT GetWindowCount ([out] unsigned int* windowCount);
    HRESULT GetInputAvailabilityMask ([out] BMDSwitcherInputAvailability* availabilityMask);
    HRESULT CanRouteInputs ([out] BOOL* canRoute);
    HRESULT SupportsVuMeters ([out] BOOL* supportsVuMeters);
    HRESULT CurrentInputSupportsVuMeter ([in] unsigned int window, [out] BOOL* supportsVuMeter);
    HRESULT GetVuMeterEnabled ([in] unsigned int window, [out] BOOL* enabled);
    HRESULT SetVuMeterEnabled ([in] unsigned int window, [in] BOOL enabled);
    HRESULT CanAdjustVuMeterOpacity ([out] BOOL* canAdjustVuMeterOpacity);
    HRESULT GetVuMeterOpacity ([out] double* opacity);
    HRESULT SetVuMeterOpacity ([in] double opacity);
    HRESULT CanToggleSafeAreaEnabled ([out] BOOL* canToggleSafeAreaEnabled);
    HRESULT CurrentInputSupportsSafeArea ([in] unsigned int window, [out] BOOL* supportsSafeArea);
    HRESULT GetSafeAreaEnabled ([in] unsigned int window, [out] BOOL* enabled);
    HRESULT SetSafeAreaEnabled ([in] unsigned int window, [in] BOOL enabled);
    HRESULT GetSupportedSafeAreaTypes ([out] unsigned int* supportedSafeAreaTypeFlags);
    HRESULT GetSafeAreaType ([in] unsigned int window, [out] BMDSwitcherMultiViewSafeAreaType* type);
    HRESULT SetSafeAreaType ([in] unsigned int window, [in] BMDSwitcherMultiViewSafeAreaType type);
    HRESULT SupportsProgramPreviewSwap ([out] BOOL* supportsProgramPreviewSwap);
    HRESULT GetProgramPreviewSwapped ([out] BOOL* swapped);
    HRESULT SetProgramPreviewSwapped ([in] BOOL swapped);
    HRESULT AddCallback ([in] IBMDSwitcherMultiViewCallback* callback);
    HRESULT RemoveCallback ([in] IBMDSwitcherMultiViewCallback* callback);
};

/* Interface IBMDSwitcherMultiViewIterator - MultiView Iterator */

[
    object,
    uuid(F88EDDEF-56C0-4222-A18A-5D11F5400069),
    helpstring("MultiView Iterator")
] interface IBMDSwitcherMultiViewIterator_v9_3_2 : IUnknown
{
    HRESULT Next ([out] IBMDSwitcherMultiView_v9_3_2** multiView);
};

/* Interface IBMDSwitcherRemoteSourceConfiguration_v9_3_2 - Switcher Remote Source Configuration v9_3_2 Object */

[
    object,
    uuid(4F61EB94-1D24-4344-8EDB-E2946921F5EE),
    helpstring("Switcher Remote Source Configuration v9_3_2 Object")
] interface IBMDSwitcherRemoteSourceConfiguration_v9_3_2 : IUnknown
{
    HRESULT AddExternalSource ([in] BSTR key, [in] BSTR name, [in] BOOL enabled);
    HRESULT RemoveExternalSource ([in] unsigned int sourceId);
    HRESULT GetDiscoverable ([out] BOOL* discoverable);
    HRESULT SetDiscoverable ([in] BOOL discoverable);
    HRESULT ForceInternetProbe (void);
    HRESULT GetInternetAddress ([out] BSTR* internetAddress);
    HRESULT SetInternetAddress ([in] BSTR internetAddress);
    HRESULT GetInternetPort ([out] unsigned short* internetPort);
    HRESULT SetInternetPort ([in] unsigned short internetPort);
    HRESULT GetInternetStatus ([out] BMDSwitcherRemoteSourceInternetStatusType* internetStatus);
    HRESULT GetPortStatus ([out] BMDSwitcherRemoteSourcePortStatusType* portStatus);
    HRESULT CreateIterator ([in] REFIID iid, [out] LPVOID* ppv);
    HRESULT AddCallback ([in] IBMDSwitcherRemoteSourceConfigurationCallback* callback);
    HRESULT RemoveCallback ([in] IBMDSwitcherRemoteSourceConfigurationCallback* callback);
};
